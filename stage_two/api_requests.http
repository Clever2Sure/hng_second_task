import requests

# Define the base URL for your API
base_url = 'http://crud-api-0yn8.onrender.com/api'  # Update this with your actual API URL if needed

# Define the Slack name you want to work with
slack_name = 'Paul Clever'

# Function to handle CRUD operations on a person
def handle_person(slack_name, data=None, method='GET'):
    url = f'{base_url}?slack_name={slack_name}'
    
    if method == 'GET':
        response = requests.get(url)
    elif method == 'POST':
        response = requests.post(url, json=data)
    elif method == 'PUT':
        response = requests.put(url, json=data)
    elif method == 'DELETE':
        response = requests.delete(url)

    return response.json()

if __name__ == '__main__':
    # Create a new person with Slack name 'Paul Clever'
    create_response = handle_person(slack_name, method='POST')
    print('Create Person Response:', create_response)

    # Retrieve a person by Slack name
    get_response = handle_person(slack_name, method='GET')
    if 'id' in get_response and 'name' in get_response:
        print('Get Person Response:')
        print(f"{{\n   'id': {get_response['id']},\n   'name': '{get_response['name']}'\n}}")

    # Update the person's name to 'New Name for Paul Clever'
    new_name = 'New Name for Paul Clever'
    update_response = handle_person(slack_name, data={"name": new_name}, method='PUT')
    if 'id' in update_response and 'name' in update_response:
        print('Update Person Response:')
        print(f"{{\n   'id': {update_response['id']},\n   'name': '{update_response['name']}'\n}}")

    # Delete the person by Slack name
    delete_response = handle_person(slack_name, method='DELETE')
    if 'message' in delete_response:
        print('Delete Person Response:')
        print(f"{{\n   'message': '{delete_response['message']}'\n}}")